{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/servers/servers.component.css","webpack:///./src/app/servers/servers.component.html","webpack:///./src/app/servers/servers.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--Author: Nishigandha Shendkar-->\\r\\n<h3>Coding challenge to display the divs in pattern</h3>\\r\\n<app-servers></app-servers>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl:'./app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { ServersComponent } from './servers/servers.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServersComponent,\n   \n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"  .demo{\\r\\n\\r\\n        width: 50px;\\r\\n        height: 50px;\\r\\n        background-color: #888;\\r\\n        position: relative;\\r\\n        border-style: solid;\\r\\n        border-width: 10px;\\r\\n        margin: 15px 15px 15px 15px;\\r\\n        \\r\\n    } \\r\\n    div{\\r\\n        float: left;\\r\\n    } \\r\\n    .row{\\r\\n        width: 100%;\\r\\n        margin: 2px;\\r\\n       \\r\\n    } \\r\\n    .col{\\r\\n        width: 7%;\\r\\n        } \\r\\n    .container{\\r\\n\\r\\n        position: fixed;\\r\\n        top: 50%;\\r\\n        left: 50%;\\r\\n        margin-top: -150px;\\r\\n        margin-left: -590px;\\r\\n    } \\r\\n    .active{\\r\\n        background-color:#333;\\r\\n\\r\\n    } \\r\\n    .row.text-center > div{\\r\\n\\r\\n        display: inline-block;\\r\\n        float:none;\\r\\n    }\"","module.exports = \"<!--Author: Nishigandha Shendkar-->\\n\\n    <div class=\\\"container\\\">\\n            <div class=\\\"row text-center\\\" *ngFor=\\\"let group of blocksGrouped; let i = index\\\">\\n                    <div class=\\\"col\\\" *ngFor=\\\"let block of blocksGrouped[i]\\\"  >\\n                     <div class=\\\"demo\\\" (click)=\\\"onSelect(block)\\\" [class.active]=\\\"block==selectedDiv\\\"></div>\\n                    </div>\\n                  </div>\\n\\n    </div>\\n    \\n\"","//Author: Nishigandha Shendkar\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements OnInit {\n\n  blockCount:any = 11;     //the number of blocks can be entered by the user\n  \n  blocksPerRow:any  = 4;   //the number of blocks per row can be entered by the user\n  blockCountArray: any[] = [];\n  blocksGrouped: any[] = [];\n  selectedDiv:any;\n  constructor() { }\n\n  \n  ngOnInit() {\n    this.genBlocks();\n    this.groupBlocks();\n  }\n\n  // This method groups the blocks based on the blocks needed per row\n  groupBlocks() {\n    for(let i = 0; i < this.blockCount; i = i + this.blocksPerRow) {\n      let group = this.blockCountArray.slice(i, i + this.blocksPerRow);\n      this.blocksGrouped.push(group);\n    }\n    \n  }\n\n  // This method generates blocks and stores some random values which are replaced by divs in the HTML file\n  genBlocks() {\n    for(let i = 0; i < this.blockCount; i++){\n      this.blockCountArray.push({ id: i, name: Math.random().toString(36).substring(7) });\n    }\n  }\n\n  // This method receives the index of the div being clicked\n  onSelect(index)\n  {\n      this.selectedDiv = index;   \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}